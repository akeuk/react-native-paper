{"version":3,"sources":["TextInputOutlined.tsx"],"names":["React","View","TextInput","NativeTextInput","StyleSheet","I18nManager","Platform","color","TextInputAdornment","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","InputLabel","LabelBackground","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","ADORNMENT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingOut","interpolatePlaceholder","calculateOutlinedIconAndAffixTopPosition","AdornmentType","AdornmentSide","OUTLINE_MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","MIN_DENSE_HEIGHT","INPUT_PADDING_HORIZONTAL","TextInputOutlined","Component","render","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","props","adornmentConfig","colors","fonts","font","regular","hasActiveOutline","focused","fontSize","fontSizeStyle","fontWeight","lineHeight","height","backgroundColor","background","textAlign","viewStyle","flatten","inputTextColor","activeColor","outlineColor","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","labelScale","fontScale","labelWidth","labelLayout","width","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","labelTranslationXOffset","isAdornmentLeftIcon","some","side","type","Left","Icon","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputOutlinedDense","inputOutlined","pad","paddingOut","baseLabelTranslateY","placeholderOpacity","labeled","measured","labelProps","placeholderStyle","wiggleOffsetX","minHeight","leftLayout","rightLayout","leftAffixTopPosition","affixHeight","labelYOffset","rightAffixTopPosition","iconTopPosition","rightAffixWidth","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","mode","affixTopPosition","Right","onAffixChange","adornmentProps","Affix","isTextInputFocused","length","textStyle","visible","paddingTop","paddingBottom","ref","underlineColorAndroid","input","textAlignVertical","Outline","outline","borderRadius","roundness","borderWidth","borderColor","create","position","paddingHorizontal","top","bottom","flexGrow","margin","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport TextInputAdornment, {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\n\nimport InputLabel from './Label/InputLabel';\nimport LabelBackground from './Label/LabelBackground';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  ADORNMENT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingOut,\n  Padding,\n  interpolatePlaceholder,\n  calculateOutlinedIconAndAffixTopPosition,\n} from './helpers';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\n\nconst OUTLINE_MINIMIZED_LABEL_Y_OFFSET = -6;\nconst LABEL_PADDING_TOP = 8;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT = 48;\nconst INPUT_PADDING_HORIZONTAL = 14;\n\nclass TextInputOutlined extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n\n    const adornmentConfig = getAdornmentConfig({ left, right });\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      lineHeight,\n      height,\n      backgroundColor = colors.background,\n      textAlign,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    let inputTextColor, activeColor, outlineColor, placeholderColor, errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = outlineColor = colors.disabled;\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = outlineColor = colors.placeholder;\n      errorColor = colors.error;\n    }\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n      (labelHalfWidth -\n        (labelScale * labelWidth) / 2 -\n        (fontSize - MINIMIZED_LABEL_FONT_SIZE) * labelScale);\n\n    let labelTranslationXOffset = 0;\n    const isAdornmentLeftIcon = adornmentConfig.some(\n      ({ side, type }) =>\n        side === AdornmentSide.Left && type === AdornmentType.Icon\n    );\n    if (isAdornmentLeftIcon) {\n      labelTranslationXOffset =\n        (I18nManager.isRTL ? -1 : 1) * (ADORNMENT_SIZE + ADORNMENT_OFFSET - 8);\n    }\n\n    const minInputHeight =\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT) - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      LABEL_PADDING_TOP\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: LABEL_PADDING_TOP,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputOutlinedDense : styles.inputOutlined\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingOut = adjustPaddingOut({ ...paddingSettings, pad });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + OUTLINE_MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      lineHeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      backgroundColor,\n      errorColor,\n      labelTranslationXOffset,\n    };\n\n    const minHeight = (height ||\n      (dense ? MIN_DENSE_HEIGHT : MIN_HEIGHT)) as number;\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const leftAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: leftLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n\n    const rightAffixTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: rightLayout.height || 0,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n    const iconTopPosition = calculateOutlinedIconAndAffixTopPosition({\n      height: minHeight,\n      affixHeight: ADORNMENT_SIZE,\n      labelYOffset: -OUTLINE_MINIMIZED_LABEL_Y_OFFSET,\n    });\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n        mode: 'outlined',\n      }\n    );\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Icon]: iconTopPosition,\n        [AdornmentType.Affix]: affixTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={viewStyle}>\n        {/*\n          Render the outline separately from the container\n          This is so that the label can overlap the outline\n          Otherwise the border will cut off the label on Android\n          */}\n        <View>\n          <Outline\n            theme={theme}\n            hasActiveOutline={hasActiveOutline}\n            activeColor={activeColor}\n            outlineColor={outlineColor}\n            backgroundColor={backgroundColor}\n          />\n          <View\n            style={{\n              paddingTop: LABEL_PADDING_TOP,\n              paddingBottom: 0,\n              minHeight,\n            }}\n          >\n            <InputLabel\n              parentState={parentState}\n              labelProps={labelProps}\n              labelBackground={LabelBackground}\n            />\n            {render?.({\n              ...rest,\n              ref: innerRef,\n              onChangeText,\n              placeholder: label\n                ? parentState.placeholder\n                : this.props.placeholder,\n              placeholderTextColor: placeholderTextColor || placeholderColor,\n              editable: !disabled && editable,\n              selectionColor:\n                typeof selectionColor === 'undefined'\n                  ? activeColor\n                  : selectionColor,\n              onFocus,\n              onBlur,\n              underlineColorAndroid: 'transparent',\n              multiline,\n              style: [\n                styles.input,\n                !multiline || (multiline && height)\n                  ? { height: inputHeight }\n                  : {},\n                paddingOut,\n                {\n                  ...font,\n                  fontSize,\n                  fontWeight,\n                  color: inputTextColor,\n                  textAlignVertical: multiline ? 'top' : 'center',\n                  textAlign: textAlign\n                    ? textAlign\n                    : I18nManager.isRTL\n                    ? 'right'\n                    : 'left',\n                },\n                adornmentStyleAdjustmentForNativeInput,\n              ],\n            } as RenderProps)}\n          </View>\n          <TextInputAdornment {...adornmentProps} />\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default TextInputOutlined;\n\ntype OutlineType = {\n  activeColor: string;\n  hasActiveOutline: boolean | undefined;\n  outlineColor: string | undefined;\n  backgroundColor: string | undefined;\n  theme: ReactNativePaper.Theme;\n};\n\nconst Outline = ({\n  theme,\n  hasActiveOutline,\n  activeColor,\n  outlineColor,\n  backgroundColor,\n}: OutlineType) => (\n  <View\n    pointerEvents=\"none\"\n    style={[\n      styles.outline,\n      // eslint-disable-next-line react-native/no-inline-styles\n      {\n        backgroundColor,\n        borderRadius: theme.roundness,\n        borderWidth: hasActiveOutline ? 2 : 1,\n        borderColor: hasActiveOutline ? activeColor : outlineColor,\n      },\n    ]}\n  />\n);\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n  },\n  outline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 6,\n    bottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    paddingHorizontal: INPUT_PADDING_HORIZONTAL,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputOutlined: {\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  inputOutlinedDense: {\n    paddingTop: 4,\n    paddingBottom: 4,\n  },\n});\n"]}